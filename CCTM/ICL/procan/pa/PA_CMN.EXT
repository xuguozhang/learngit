
C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/yoj/arc/ICL/src/procan/pa/PA_CMN.EXT,v 1.1 2010/07/23 15:12:35 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C @(#)PA_CMN.EXT	1.2 /project/mod3/ICL/src/procan/pa/SCCS/s.PA_CMN.EXT 07 Jul 1997 11:44:52

C.......................................................................
C    INCLUDE FILE   PA_CMN.EXT                                                
C
C    CONTAINS: Common variables for Process Analysis                          
C
C    DEPENDENT UPON: Mechanism Input file                                     
C
C    CREATED BY: Process Analysis Control Program                             
C                11:36:11 EDT July 7, 1997                                    
C
C.......................................................................

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  The following variables define the domain for all IPR
c  and IRR output variables:
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c    BEGCOL  = Starting column for output
c    ENDCOL  = Ending column for output
c    BEGROW  = Starting row for output
c    ENDROW  = Ending row for output
c    BEGLEV  = Starting layer for output
c    ENDLEV  = Ending layer for output
c    PACOLS  = Total number of columns for PA output
c    PAROWS  = Total number of rows for PA output
c    PALEVS  = Total number of layers for PA output
c    PACOLSD = Column dimension parameter for PA outputs
c    PAROWSD = Row dimension parameter for PA outputs
c    PALEVSD = Level dimension parameter for PA outputs
c    IRCOLSD = Column dimension parameter for IRR outputs
c    IRROWSD = Column dimension parameter for IRR outputs
c    IRLEVSD = Column dimension parameter for IRR outputs
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      INTEGER BEGCOL
      PARAMETER ( BEGCOL =   1 )

      INTEGER ENDCOL
      PARAMETER ( ENDCOL =  21 )

      INTEGER BEGROW
      PARAMETER ( BEGROW =   1 )

      INTEGER ENDROW
      PARAMETER ( ENDROW =  21 )

      INTEGER BEGLEV
      PARAMETER ( BEGLEV =   1 )

      INTEGER ENDLEV
      PARAMETER ( ENDLEV =   2 )

      INTEGER PACOLS
      PARAMETER ( PACOLS =  21 )

      INTEGER PAROWS
      PARAMETER ( PAROWS =  21 )

      INTEGER PALEVS
      PARAMETER ( PALEVS =   2 )



      INTEGER     X1F0
      PARAMETER ( X1F0 =  (NCOLS / GL_NCOLS) * (NROWS / GL_NROWS) )


      INTEGER PACOLSD
      PARAMETER ( PACOLSD = X1F0 * PACOLS + (1 - X1F0) * NCOLS )

      INTEGER PAROWSD
      PARAMETER ( PAROWSD = X1F0 * PAROWS + (1 - X1F0) * NROWS )


      INTEGER PALEVSD
      PARAMETER ( PALEVSD = PALEVS )


      INTEGER IRCOLSD
      PARAMETER ( IRCOLSD = X1F0 * PACOLS + (1 - X1F0) * NCOLS )

      INTEGER IRROWSD
      PARAMETER ( IRROWSD = X1F0 * PAROWS + (1 - X1F0) * NROWS )


      INTEGER IRLEVSD
      PARAMETER ( IRLEVSD = PALEVS )


cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  The following variables are used in the output file descriptions
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c     NIPRVAR   = Number of IPR output variables
c     NIRRVAR   = Number of IRR output variables
c     NIPRVARD  = Dimension for IPR output variables
c     NIRRVARD  = Dimension for IRR output variables
c     IPRNAME   = Name of IPR output variable
c     IRRNAME   = Name of IRR output variable
c     IPRDESC    = Extended name of IPR output variable
c     IRRDESC   = Extended name of IRR output variable
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      INTEGER NIPRVAR
      PARAMETER ( NIPRVAR =  63 )

      INTEGER NIRRVAR
      PARAMETER ( NIRRVAR =  37 )


      INTEGER NIPRVARD
      PARAMETER ( NIPRVARD =  63 )

      INTEGER NIRRVARD
      PARAMETER ( NIRRVARD =  37 )

      CHARACTER*16 IPRNAME( NIPRVARD )
      CHARACTER*60 IPRDESC( NIPRVARD )
      CHARACTER*16 IRRNAME( NIRRVARD )
      CHARACTER*60 IRRDESC( NIRRVARD )



cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  The following variables are used in the integrated process rate 
c  computations.
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c    NPROCS     = No. of science processes that can be  monitored
c    N_IPR_SPC  = Number of families for IPR
c    NCSAVE     = Number of CTM species concs to save for IPR
c    MXCGRID    = Max number of CTM species in an IPR family
c    N_IPR_SPCD = Dimension for number of families for IPR
c    NCSAVED    = Dimension for NCSAVE
c    MXCGRIDD   = Dimension for MXCGRID
c    NCGRID     = Array of no. of CTM species in an IPR family
c    IPROUT     = Array of IPR output variable indices
c    IPR2GRD    = Array of CTM species indices for IPR families
c    IPR2SAV    = Array of saved species indices for IPR families
c    SV2GRD     = Array of CTM indicies for saved concs
c    SPCOEF     = Array of coefficients for IPR familys
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      INTEGER NPROCS
      PARAMETER ( NPROCS =  12 )

      INTEGER N_IPR_SPC
      PARAMETER ( N_IPR_SPC =   7 )

      INTEGER NCSAVE
      PARAMETER ( NCSAVE =  31 )

      INTEGER MXCGRID
      PARAMETER ( MXCGRID =  18 )

      INTEGER N_IPR_SPCD
      PARAMETER ( N_IPR_SPCD =   7 )

      INTEGER NCSAVED
      PARAMETER ( NCSAVED =  31 )

      INTEGER MXCGRIDD
      PARAMETER ( MXCGRIDD =  18 )


      CHARACTER*16 PROCNAMES( NPROCS )

      INTEGER NCGRID( N_IPR_SPCD )
      INTEGER SV2GRD( NCSAVED )
      INTEGER IPROUT( N_IPR_SPCD,NPROCS )
      INTEGER IPR2GRD( N_IPR_SPCD,MXCGRIDD )
      INTEGER IPR2SAV( N_IPR_SPCD,MXCGRIDD )

      LOGICAL LPROCOUT( NPROCS )

      REAL SPCOEF( N_IPR_SPCD,MXCGRIDD )
      REAL DELC( PACOLSD,PAROWSD,PALEVSD,NIPRVARD )
      REAL CSAV( PACOLSD,PAROWSD,PALEVSD,NCSAVED )



cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  The following variables are used in the integrated reaction rate
c  computations.
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c    LFULLIRR     = Flag for computing IRRs for every reaction
c    LPARTIRR     = Flag for computing IRRs for selected reactions
c    NUMTEMPS     = No. of temporary intermediate IRRs to compute
c    NUMOUTPOS    = No. of temp. IRR terms to add iff the IRR > 0
c    NUMOUTNEG    = No. of temp. IRR terms to add iff the IRR < 0
c    NUMOUTIND    = No. of temp. IRR terms to add regardless of sign
c    MXNIRRRXNS   = Max no. of reaction terms in an output IRR
c    MXTEMPTRMS   = Max no. of reaction terms in a temp. IRR
c    NUMTEMPSD    = Dimension for number of temp IRRs
c    NUMOUTPOSD   = Dimension parameter for NUMOUTPOS
c    NUMOUTNEGD   = Dimension parameter for NUMOUTNEG
c    NUMOUTINDD   = Dimension parameter for NUMOUTIND
c    MXNIRRRXNSD  = Dimension parameter for MXNIRRRXNS
c    MXTEMPTRMSD  = Dimension parameter for MXTEMPTRMS
c    NIRRRXNS     = Vector of no. of reaction terms in an output IRR
c    TEMPTERMS    = Vector of no. of terms in a temporary IRR
c    TEMPOUTPOS   = Vector of no. of IRR terms to add if IRR > 0
c    TEMPOUTNEG   = Vector of no. of IRR terms to add if IRR < 0
c    TEMPOUTIND   = Vector of no. of IRR terms to add regardless of sign
c    INDXOUTPOS   = Vector of indices pointing to IRR output variable
c    INDXOUTNEG   = Vector of indices pointing to IRR output variable
c    INDXOUTIND   = Vector of indices pointing to IRR output variable
c    COEFOUTPOS   = Vector of temp IRR coefficients
c    COEFOUTNEG   = Vector of temp IRR coefficients
c    COEFOUTIND   = Vector of temp IRR coefficients
c    TEMPRXN      = Array of reaction nos. for a temp. IRR
c    IRRRXN       = Array of reaction nos. for an output IRR
c    TEMPCOEF     = Array of reaction coefficients for a temp IRR
c    IRRCOEF      = Array of reaction coefficients for an output IRR
c    IRRSTEP      = Array of output IRRs for one time step
c    IRRBLK       = Array of output IRRs for a block of cells
c    IRROUT       = Array of IRRs to output
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      LOGICAL LFULLIRR
      PARAMETER ( LFULLIRR = .FALSE. )

      LOGICAL LPARTIRR
      PARAMETER ( LPARTIRR = .TRUE. )

      INTEGER NUMTEMPS
      PARAMETER ( NUMTEMPS =  20 )

      INTEGER NUMOUTPOS
      PARAMETER ( NUMOUTPOS =  28 )

      INTEGER NUMOUTNEG
      PARAMETER ( NUMOUTNEG =  19 )

      INTEGER NUMOUTIND
      PARAMETER ( NUMOUTIND =  12 )

      INTEGER MXNIRRRXNS
      PARAMETER ( MXNIRRRXNS =  57 )

      INTEGER MXTEMPTRMS
      PARAMETER ( MXTEMPTRMS =  15 )

      INTEGER NUMTEMPSD
      PARAMETER ( NUMTEMPSD =  20 )

      INTEGER NUMOUTPOSD
      PARAMETER ( NUMOUTPOSD =  28 )

      INTEGER NUMOUTNEGD
      PARAMETER ( NUMOUTNEGD =  19 )

      INTEGER NUMOUTINDD
      PARAMETER ( NUMOUTINDD =  12 )

      INTEGER MXNIRRRXNSD
      PARAMETER ( MXNIRRRXNSD =  57 )

      INTEGER MXTEMPTRMSD
      PARAMETER ( MXTEMPTRMSD =  15 )

      INTEGER BLKSIZED
      PARAMETER ( BLKSIZED = BLKSIZE )



      INTEGER NIRRRXNS( NIRRVARD )
      INTEGER TEMPTERMS( NUMTEMPSD )
      INTEGER TEMPOUTPOS( NUMOUTPOSD )
      INTEGER INDXOUTPOS( NUMOUTPOSD )
      INTEGER TEMPOUTNEG( NUMOUTNEGD )
      INTEGER INDXOUTNEG( NUMOUTNEGD )
      INTEGER TEMPOUTIND( NUMOUTINDD )
      INTEGER INDXOUTIND( NUMOUTINDD )
      INTEGER IRRRXN( NIRRVARD,MXNIRRRXNSD )
      INTEGER TEMPRXN( NUMTEMPSD,MXTEMPTRMSD )

      REAL COEFOUTPOS( NUMOUTPOSD )
      REAL COEFOUTNEG( NUMOUTNEGD )
      REAL COEFOUTIND( NUMOUTINDD )
      REAL TEMPCOEF( NUMTEMPSD,MXTEMPTRMSD )
      REAL IRRCOEF( NIRRVARD,MXNIRRRXNSD )
      REAL IRRSTEP( BLKSIZED,NIRRVARD )
      REAL IRRBLK( BLKSIZED,NIRRVARD )
      REAL IRROUT( IRCOLSD,IRROWSD,IRLEVSD,NIRRVARD )



cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Common Blocks:
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      COMMON /PACHAR/ IPRNAME,
     &                IPRDESC,
     &                IRRNAME,
     &                IRRDESC,
     &                PROCNAMES


      COMMON /PALGCL/ LPROCOUT


      COMMON /PAINTG/ NCGRID,
     &                SV2GRD,
     &                IPROUT,
     &                IPR2GRD,
     &                IPR2SAV ,
     &                NIRRRXNS,
     &                TEMPTERMS,
     &                TEMPOUTPOS,
     &                TEMPOUTNEG,
     &                TEMPOUTIND,
     &                INDXOUTPOS,
     &                INDXOUTNEG,
     &                INDXOUTIND,
     &                TEMPRXN,
     &                IRRRXN


      COMMON /PAREAL/ SPCOEF,
     &                DELC,
     &                CSAV,
     &                COEFOUTPOS,
     &                COEFOUTNEG,
     &                COEFOUTIND,
     &                TEMPCOEF,
     &                IRRCOEF,
     &                IRRSTEP,
     &                IRRBLK,
     &                IRROUT


cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  The following variables define the PA subdomain in each processor
c  for a parallel CCTM application.
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      INTEGER MY_BEGROW    ! Starting row of local PA grid in a processor
      INTEGER MY_ENDROW    ! Ending row of local PA grid in a processor
      INTEGER MY_BEGCOL    ! Starting column of local PA grid in a processor
      INTEGER MY_ENDCOL    ! Ending column of local PA grid in a processor
      INTEGER MY_BEGLEV    ! Starting level of local PA grid in a processor
      INTEGER MY_ENDLEV    ! Ending level of local PA grid in a processor
      INTEGER MY_PAROWS    ! Number of rows of local PA grid a processor has
      INTEGER MY_PACOLS    ! Number of columns of local PA grid a processor has
      INTEGER MY_IRR_BEGROW  ! Starting row of local IRR grid in a processor
      INTEGER MY_IRR_ENDROW  ! Ending row of local IRR grid in a processor
      INTEGER MY_IRR_BEGCOL  ! Starting column of local IRR grid in a processor
      INTEGER MY_IRR_ENDCOL  ! Ending column of local IRR grid in a processor
      INTEGER MY_IRR_BEGLEV  ! Starting level of local IRR grid in a processor
      INTEGER MY_IRR_ENDLEV  ! Ending level of local IRR grid in a processor


      COMMON / PA_GRID / MY_BEGROW, MY_ENDROW, MY_BEGCOL, MY_ENDCOL,
     &                   MY_BEGLEV, MY_ENDLEV, MY_PAROWS, MY_PACOLS,
     &                   MY_IRR_BEGROW, MY_IRR_ENDROW, MY_IRR_BEGCOL,
     &                   MY_IRR_ENDCOL, MY_IRR_BEGLEV, MY_IRR_ENDLEV


C............ End of Process Analysis COMMON Include File ....................
